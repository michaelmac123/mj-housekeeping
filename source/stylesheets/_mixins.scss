@mixin clearfix{
  *zoom: 1;
  &:before, &:after{
    content: "";
    display: table; }
  &:after{
    clear:both; } }

@mixin float($float:left, $pos:relative) {
  float:    $float;
  position: $pos;}

@mixin font-smoothing( $webkit: antialiased, $moz: grayscale) {
  -webkit-font-smoothing:   $webkit;
  -moz-osx-font-smoothing:  $moz; }

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
  line-height: ($sizeValue * 10) + px;
  line-height: $sizeValue + rem;
}

@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value; }
  #{$property}: $value;
}

/// Responsive manager.
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
  @else {
    @warn "Couldn't find a breakpoint named `#{$name}`.";
  }
}